version: '3'

services:
  python:
    container_name: python
    image: python:3.9.18
    environment:
      - KAFKA_BROKER=${PROJECT_KAFKA_BROKER}
      - KAFKA_TOPIC_EMAIL=${PROJECT_KAFKA_TOPIC_EMAIL}
      - KAFKA_TOPIC_VALID=${PROJECT_KAFKA_TOPIC_VALID}
    working_dir: /app
    volumes:
      - ./app/python:/app
    command: >
      sh -c "pip3 install --upgrade pip &&
             pip3 install -r requirements.txt &&
             tail -f /dev/null"

  cassandra:
    container_name: cassandra
    image: cassandra:latest
    ports:
      - "9042:9042"
    working_dir: /app
    volumes:
      - ./app/cassandra:/app

  spark-master:
    container_name: spark-master
    image: bde2020/spark-master:3.2.1-hadoop3.2
    environment:
      - SPARK_MASTER=${PROJECT_SPARK_MASTER}
      - KAFKA_BROKER=${PROJECT_KAFKA_BROKER}
      - CASSANDRA_KEYSPACE=${PROJECT_CASSANDRA_KEYSPACE}
      - CASSANDRA_TABLE_USERS=${PROJECT_CASSANDRA_TABLE_USERS}
      - CASSANDRA_TABLE_OTP=${PROJECT_CASSANDRA_TABLE_OTP}
    ports:
      - "8080:8080"
      - "7077:7077"
      - "4040:4040"
    working_dir: /app
    volumes:
      - ./app/spark:/app
    command: >
      sh -c "pip3 install --upgrade pip &&
             pip3 install -r requirements.txt &&
             /bin/bash /master.sh"

  spark-worker-1:
    container_name: spark-worker-1
    image: bde2020/spark-worker:3.2.1-hadoop3.2
    depends_on:
      - spark-master
    environment:
      - SPARK_MASTER=${PROJECT_SPARK_MASTER}
    ports:
      - "8081:8081"
    working_dir: /app
    volumes:
      - ./app/spark:/app
    command: >
      sh -c "pip3 install --upgrade pip &&
             pip3 install -r requirements.txt &&
             /bin/bash /worker.sh"

  spark-worker-2:
    container_name: spark-worker-2
    image: bde2020/spark-worker:3.2.1-hadoop3.2
    depends_on:
      - spark-master    
    environment:
      - SPARK_MASTER=${PROJECT_SPARK_MASTER}
    ports:
      - "8082:8081"
    working_dir: /app
    volumes:
      - ./app/spark:/app
    command: >
      sh -c "pip3 install --upgrade pip &&
             pip3 install -r requirements.txt &&
             /bin/bash /worker.sh"

  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    container_name: zookeeper
    ports:
      - "2181:2181"
    command: >
      sh -c "bin/zkServer.sh start &&
             tail -f /dev/null"

  kafka:
    image: wurstmeister/kafka:2.12-2.5.0
    container_name: kafka
    depends_on: 
      - zookeeper    
    environment:
      - KAFKA_BROKER=${PROJECT_KAFKA_BROKER}
      - KAFKA_HOME=${PROJECT_KAFKA_HOME}
    ports:
      - "9092:9092"
    working_dir: /app
    volumes:
      - ./app/kafka:/app
    command: >
      sh -c "./start-kafka.sh &&
             ./create-topic.sh email &&
             ./create-topic.sh otp &&
             tail -f /dev/null"
